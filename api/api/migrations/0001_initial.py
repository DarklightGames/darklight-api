# Generated by Django 2.2.8 on 2022-05-24 19:33

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField()),
                ('title', models.CharField(max_length=64)),
                ('url', models.URLField()),
                ('content', models.TextField()),
                ('is_published', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ConstructionClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classname', models.CharField(max_length=128, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='DamageTypeClass',
            fields=[
                ('id', models.CharField(max_length=128, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crc', models.BigIntegerField(unique=True)),
                ('version', models.CharField(max_length=16)),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Map',
            fields=[
                ('name', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('bounds_ne_x', models.FloatField(null=True)),
                ('bounds_ne_y', models.FloatField(null=True)),
                ('bounds_sw_x', models.FloatField(null=True)),
                ('bounds_sw_y', models.FloatField(null=True)),
                ('offset', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='PawnClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classname', models.CharField(max_length=128, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('kills', models.PositiveIntegerField(default=0)),
                ('deaths', models.PositiveIntegerField(default=0)),
                ('ff_kills', models.PositiveIntegerField(default=0)),
                ('ff_deaths', models.PositiveIntegerField(default=0)),
                ('playtime', models.DurationField(default=datetime.timedelta(0))),
            ],
        ),
        migrations.CreateModel(
            name='PlayerName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField()),
                ('ended_at', models.DateTimeField(null=True)),
                ('winner', models.IntegerField(null=True)),
                ('log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Log')),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.GenericIPAddressField()),
                ('started_at', models.DateTimeField()),
                ('ended_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='VehicleFrag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.IntegerField()),
                ('killer_team_index', models.SmallIntegerField()),
                ('killer_location_x', models.FloatField(default=0.0)),
                ('killer_location_y', models.FloatField(default=0.0)),
                ('killer_location_z', models.FloatField(default=0.0)),
                ('vehicle_team_index', models.IntegerField()),
                ('vehicle_location_x', models.FloatField(default=0.0)),
                ('vehicle_location_y', models.FloatField(default=0.0)),
                ('vehicle_location_z', models.FloatField(default=0.0)),
                ('distance', models.IntegerField(default=0.0)),
                ('damage_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.DamageTypeClass')),
                ('killer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.Player')),
                ('killer_pawn_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.PawnClass')),
                ('killer_vehicle_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.PawnClass')),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Round')),
                ('vehicle_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.PawnClass')),
            ],
        ),
        migrations.CreateModel(
            name='TextMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=128)),
                ('type', models.CharField(max_length=16)),
                ('sent_at', models.DateTimeField()),
                ('team_index', models.SmallIntegerField()),
                ('squad_index', models.SmallIntegerField()),
                ('log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Log')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Player')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('offender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Player')),
            ],
        ),
        migrations.CreateModel(
            name='RallyPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_index', models.IntegerField()),
                ('squad_index', models.IntegerField()),
                ('location_x', models.FloatField()),
                ('location_y', models.FloatField()),
                ('location_z', models.FloatField()),
                ('spawn_count', models.IntegerField()),
                ('is_established', models.BooleanField()),
                ('establisher_count', models.IntegerField()),
                ('created_at', models.DateTimeField()),
                ('destroyed_at', models.DateTimeField(null=True)),
                ('destroyed_reason', models.CharField(choices=[('overrun', 'Overrun'), ('exhausted', 'Exhausted'), ('damaged', 'Damaged'), ('deleted', 'Deleted'), ('replaced', 'Replaced'), ('spawn_kill', 'Spawn Kill'), ('abandoned', 'Abandoned'), ('encroached', 'Encroached Upon')], max_length=32, null=True)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.Player')),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Round')),
            ],
        ),
        migrations.AddField(
            model_name='player',
            name='names',
            field=models.ManyToManyField(to='api.PlayerName'),
        ),
        migrations.AddField(
            model_name='player',
            name='sessions',
            field=models.ManyToManyField(to='api.Session'),
        ),
        migrations.CreateModel(
            name='Patron',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tier', models.CharField(choices=[('lead', 'Lead'), ('bronze', 'Bronze'), ('silver', 'Silver'), ('gold', 'Gold')], max_length=32)),
                ('player', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='api.Player')),
            ],
        ),
        migrations.CreateModel(
            name='Objective',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('map', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Map')),
            ],
        ),
        migrations.AddField(
            model_name='log',
            name='map',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.Map'),
        ),
        migrations.AddField(
            model_name='log',
            name='players',
            field=models.ManyToManyField(to='api.Player'),
        ),
        migrations.CreateModel(
            name='Frag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hit_index', models.SmallIntegerField()),
                ('time', models.IntegerField()),
                ('killer_team_index', models.SmallIntegerField()),
                ('killer_location_x', models.FloatField(default=0.0)),
                ('killer_location_y', models.FloatField(default=0.0)),
                ('killer_location_z', models.FloatField(default=0.0)),
                ('victim_team_index', models.SmallIntegerField()),
                ('victim_location_x', models.FloatField(default=0.0)),
                ('victim_location_y', models.FloatField(default=0.0)),
                ('victim_location_z', models.FloatField(default=0.0)),
                ('distance', models.IntegerField(default=0.0)),
                ('damage_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.DamageTypeClass')),
                ('killer', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.Player')),
                ('killer_pawn_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.PawnClass')),
                ('killer_vehicle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='api.PawnClass')),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Round')),
                ('victim', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.Player')),
                ('victim_pawn_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='api.PawnClass')),
                ('victim_vehicle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='api.PawnClass')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=32)),
                ('data', models.TextField()),
                ('round', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='api.Round')),
            ],
        ),
        migrations.CreateModel(
            name='Construction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_index', models.IntegerField()),
                ('round_time', models.IntegerField()),
                ('location_x', models.IntegerField()),
                ('location_y', models.IntegerField()),
                ('location_z', models.IntegerField()),
                ('classname', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.ConstructionClass')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.Player')),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Round')),
            ],
        ),
        migrations.CreateModel(
            name='Capture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round_time', models.IntegerField()),
                ('team_index', models.IntegerField()),
                ('objective', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Objective')),
                ('players', models.ManyToManyField(to='api.Player')),
                ('round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.Round')),
            ],
        ),
    ]
